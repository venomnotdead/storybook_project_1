"use strict";(self.webpackChunkproject_one=self.webpackChunkproject_one||[]).push([[218,484],{"./src/components/Task.stories.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ActionsData:()=>ActionsData,Archived:()=>Archived,Default:()=>Default,Pinned:()=>Pinned,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_test__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs"),_Task__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/Task.jsx");const ActionsData={onArchiveTask:(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)(),onPinTask:(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)()},__WEBPACK_DEFAULT_EXPORT__={component:_Task__WEBPACK_IMPORTED_MODULE_1__.A,title:"Task",tags:["autodocs"],excludeStories:/.*Data$/,args:{...ActionsData}},Default={args:{task:{id:"1",title:"Test Task",state:"TASK_INBOX"}}},Pinned={args:{task:{...Default.args.task,state:"TASK_PINNED"}}},Archived={args:{task:{...Default.args.task,state:"TASK_ARCHIVED"}}},__namedExportsOrder=["ActionsData","Default","Pinned","Archived"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    task: {\n      id: "1",\n      title: "Test Task",\n      state: "TASK_INBOX"\n    }\n  }\n}',...Default.parameters?.docs?.source}}},Pinned.parameters={...Pinned.parameters,docs:{...Pinned.parameters?.docs,source:{originalSource:'{\n  args: {\n    task: {\n      ...Default.args.task,\n      state: "TASK_PINNED"\n    }\n  }\n}',...Pinned.parameters?.docs?.source}}},Archived.parameters={...Archived.parameters,docs:{...Archived.parameters?.docs,source:{originalSource:'{\n  args: {\n    task: {\n      ...Default.args.task,\n      state: "TASK_ARCHIVED"\n    }\n  }\n}',...Archived.parameters?.docs?.source}}}},"./src/components/taskList/TaskList.stories.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Empty:()=>Empty,Loading:()=>Loading,MockedState:()=>MockedState,WithPinnedTasks:()=>WithPinnedTasks,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),_TaskList__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/taskList/TaskList.jsx"),_Task_stories__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Task.stories.jsx"),react_redux__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react-redux/dist/react-redux.mjs"),_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs");const MockedState={tasks:[{..._Task_stories__WEBPACK_IMPORTED_MODULE_2__.Default.args.task,id:"1",title:"Task 1"},{..._Task_stories__WEBPACK_IMPORTED_MODULE_2__.Default.args.task,id:"2",title:"Task 2"},{..._Task_stories__WEBPACK_IMPORTED_MODULE_2__.Default.args.task,id:"3",title:"Task 3"},{..._Task_stories__WEBPACK_IMPORTED_MODULE_2__.Default.args.task,id:"4",title:"Task 4"},{..._Task_stories__WEBPACK_IMPORTED_MODULE_2__.Default.args.task,id:"5",title:"Task 5"},{..._Task_stories__WEBPACK_IMPORTED_MODULE_2__.Default.args.task,id:"6",title:"Task 6"}],status:"idle",error:null},Mockstore=({taskboxState,children})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_redux__WEBPACK_IMPORTED_MODULE_3__.Kq,{store:(0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_4__.U1)({reducer:{taskbox:(0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_4__.Z0)({name:"taskbox",initialState:taskboxState,reducers:{updateTaskState:(state,action)=>{const{id,newTaskState}=action.payload,task=state.tasks.findIndex((task=>task.id===id));task>=0&&(state.tasks[task].state=newTaskState)}}}).reducer}}),children}),__WEBPACK_DEFAULT_EXPORT__={component:_TaskList__WEBPACK_IMPORTED_MODULE_1__.A,title:"TaskList",decorators:[story=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{margin:"3rem"},children:story()})],tags:["autodocs"],excludeStories:/.*MockedState$/},Default={decorators:[story=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Mockstore,{taskboxState:MockedState,children:story()})]},WithPinnedTasks={decorators:[story=>{const pinnedtasks=[...MockedState.tasks.slice(0,5),{id:"6",title:"Task 6 (pinned)",state:"TASK_PINNED"}];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Mockstore,{taskboxState:{...MockedState,tasks:pinnedtasks},children:story()})}]},Loading={decorators:[story=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Mockstore,{taskboxState:{...MockedState,status:"loading"},children:story()})]},Empty={decorators:[story=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Mockstore,{taskboxState:{...MockedState,tasks:[]},children:story()})]},__namedExportsOrder=["MockedState","Default","WithPinnedTasks","Loading","Empty"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  decorators: [story => <Mockstore taskboxState={MockedState}>{story()}</Mockstore>]\n}",...Default.parameters?.docs?.source}}},WithPinnedTasks.parameters={...WithPinnedTasks.parameters,docs:{...WithPinnedTasks.parameters?.docs,source:{originalSource:"{\n  decorators: [story => {\n    const pinnedtasks = [...MockedState.tasks.slice(0, 5), {\n      id: '6',\n      title: 'Task 6 (pinned)',\n      state: 'TASK_PINNED'\n    }];\n    return <Mockstore taskboxState={{\n      ...MockedState,\n      tasks: pinnedtasks\n    }}>\n          {story()}\n        </Mockstore>;\n  }]\n}",...WithPinnedTasks.parameters?.docs?.source}}},Loading.parameters={...Loading.parameters,docs:{...Loading.parameters?.docs,source:{originalSource:"{\n  decorators: [story => <Mockstore taskboxState={{\n    ...MockedState,\n    status: 'loading'\n  }}>\n        {story()}\n      </Mockstore>]\n}",...Loading.parameters?.docs?.source}}},Empty.parameters={...Empty.parameters,docs:{...Empty.parameters?.docs,source:{originalSource:"{\n  decorators: [story => <Mockstore taskboxState={{\n    ...MockedState,\n    tasks: []\n  }}>\n        {story()}\n      </Mockstore>]\n}",...Empty.parameters?.docs?.source}}}},"./src/components/Task.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>Task});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),prop_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);function Task({task:{id,title,state},onArchiveTask,onPinTask}){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:`list-item ${state}`,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("label",{htmlFor:`archiveTask-${id}`,"aria-label":`archiveTask-${id}`,className:"checkbox",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input",{type:"checkbox",disabled:!0,name:"checked",id:`archiveTask-${id}`,checked:"TASK_ARCHIVED"===state}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"checkbox-custom",onClick:()=>onArchiveTask(id)})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("label",{htmlFor:`title-${id}`,"aria-label":title,className:"title",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input",{type:"text",value:title,readOnly:!0,name:"title",id:`title-${id}`,placeholder:"Input title"})}),"TASK_ARCHIVED"!==state&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("button",{className:"pin-button",onClick:()=>onPinTask(id),id:`pinTask-${id}`,"aria-label":`pinTask-${id}`,children:"pin"},`pinTask-${id}`)]})}Task.propTypes={task:prop_types__WEBPACK_IMPORTED_MODULE_1___default().shape({id:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string.isRequired,title:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string.isRequired,state:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string.isRequired}),onArchiveTask:prop_types__WEBPACK_IMPORTED_MODULE_1___default().func,onPinTask:prop_types__WEBPACK_IMPORTED_MODULE_1___default().func},Task.__docgenInfo={description:"",methods:[],displayName:"Task",props:{task:{description:"Composition of the task",type:{name:"shape",value:{id:{name:"string",description:"Id of the task",required:!0},title:{name:"string",description:"Title of the task",required:!0},state:{name:"string",description:"Current state of the task",required:!0}}},required:!1},onArchiveTask:{description:"Event to change the task to archived",type:{name:"func"},required:!1},onPinTask:{description:"Event to change the task to pinned",type:{name:"func"},required:!1}}}},"./src/components/taskList/TaskList.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>TaskList});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),prop_types__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__),_Task__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/Task.jsx"),react_redux__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react-redux/dist/react-redux.mjs"),_lib_store__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/lib/store.js");function TaskList(){const tasks=(0,react_redux__WEBPACK_IMPORTED_MODULE_3__.d4)((state=>[...state.taskbox.tasks.filter((t=>"TASK_PINNED"===t.state)),...state.taskbox.tasks.filter((t=>"TASK_INBOX"===t.state)),...state.taskbox.tasks.filter((t=>"TASK_ARCHIVED"===t.state))])),{status}=(0,react_redux__WEBPACK_IMPORTED_MODULE_3__.d4)((state=>state.taskbox)),dispatch=(0,react_redux__WEBPACK_IMPORTED_MODULE_3__.wA)(),LoadingRow=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"loading-item",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"glow-checkbox"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("span",{className:"glow-text",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{children:"Loading"})," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{children:"cool"})," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{children:"state"})]})]});if("loading"==status)return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"list-items","data-testid":"loading",children:[LoadingRow,LoadingRow,LoadingRow,LoadingRow,LoadingRow,LoadingRow]},"loading");if(0===tasks.length)return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"list-items","data-testid":"empty",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"wrapper-message",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"icon-check"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{className:"title-message",children:"You have no tasks"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{className:"subtitle-message",children:"Sit back and relax"})]})},"empty");const tasksInOrder=[...tasks.filter((t=>"TASK_PINNED"===t.state)),...tasks.filter((t=>"TASK_PINNED"!==t.state))];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"list-items",children:tasksInOrder.map((task=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Task__WEBPACK_IMPORTED_MODULE_1__.A,{task,onPinTask:task=>{return value=task,void dispatch((0,_lib_store__WEBPACK_IMPORTED_MODULE_2__.Qc)({id:value,newTaskState:"TASK_PINNED"}));var value},onArchiveTask:task=>{return value=task,void dispatch((0,_lib_store__WEBPACK_IMPORTED_MODULE_2__.Qc)({id:value,newTaskState:"TASK_ARCHIVED"}));var value}},task.id)))})}TaskList.propTypes={loading:prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool,tasks:prop_types__WEBPACK_IMPORTED_MODULE_4___default().arrayOf(_Task__WEBPACK_IMPORTED_MODULE_1__.A.propTypes.task).isRequired,onPinTask:prop_types__WEBPACK_IMPORTED_MODULE_4___default().func,onArchiveTask:prop_types__WEBPACK_IMPORTED_MODULE_4___default().func},TaskList.defaultProps={loading:!1},TaskList.__docgenInfo={description:"",methods:[],displayName:"TaskList",props:{loading:{defaultValue:{value:"false",computed:!1},description:"Checks if it's in loading state",type:{name:"bool"},required:!1},tasks:{description:"The list of tasks",type:{name:"arrayOf",value:{name:"custom",raw:"Task.propTypes.task"}},required:!0},onPinTask:{description:"Event to change the task to pinned",type:{name:"func"},required:!1},onArchiveTask:{description:"Event to change the task to archived",type:{name:"func"},required:!1}}}},"./src/lib/store.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>__WEBPACK_DEFAULT_EXPORT__,Qc:()=>updateTaskState,j:()=>fetchTasks});var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs");const fetchTasks=(0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.zD)("todos/fetchTodos",(async()=>{const response=await fetch("https://jsonplaceholder.typicode.com/todos?userId=1");return(await response.json()).map((task=>({id:`${task.id}`,title:task.title,state:task.completed?"TASK_ARCHIVED":"TASK_INBOX"})))})),TasksSlice=(0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.Z0)({name:"taskbox",initialState:{tasks:[],status:"idle",error:null},reducers:{updateTaskState:(state,action)=>{const{id,newTaskState}=action.payload,task=state.tasks.findIndex((task=>task.id===id));task>=0&&(state.tasks[task].state=newTaskState)}},extraReducers(builder){builder.addCase(fetchTasks.pending,(state=>{state.status="loading",state.error=null,state.tasks=[]})).addCase(fetchTasks.fulfilled,((state,action)=>{state.status="succeeded",state.error=null,state.tasks=action.payload})).addCase(fetchTasks.rejected,(state=>{state.status="failed",state.error="Something went wrong",state.tasks=[]}))}}),{updateTaskState}=TasksSlice.actions,__WEBPACK_DEFAULT_EXPORT__=(0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.U1)({reducer:{taskbox:TasksSlice.reducer}})}}]);